name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint code
      run: npm run lint
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Test CLI functionality
      run: |
        # Test basic CLI commands work
        node dist/cli.js --help
        node dist/cli.js --version
        
    - name: Test project detection
      run: |
        # Test on current TypeScript project
        node dist/cli.js init --force --output test.faf
        
        # Verify .faf file was created and has content
        ls -la test.faf
        head -10 test.faf
        
        # Test scoring
        node dist/cli.js score test.faf
        
        # Test validation
        node dist/cli.js validate test.faf
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '20.x'
      with:
        name: dist-files
        path: dist/
        
  security-audit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level high